<?xml version="1.0" encoding="utf-8"?>

<launch>

<!-- Elevation mapping node -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/elevation_maps/simple_demo_map.yaml" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/robots/test_iDog.yaml" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/postprocessing/postprocessor_pipeline.yaml" />
  </node>

<!-- Publish some points -->
  <node pkg="point_cloud_io" type="read" name="read_ply" output="screen">
    <param name="file_path" value="$(find elevation_mapping_demos)/sample_data/maze.ply" />
    <param name="topic" value="/points" />
    <param name="frame" value="map" />
    <param name="rate" value="1.0" />
  </node>

  <!-- Setup a transform between the world and the robot -->
  <node pkg="tf" type="static_transform_publisher" name="world_to_robot" args="2.0 6.0 0 0 0.0 0 /map /base 100"/>



  <!-- Launch visualizations for the resulting elevation map -->
  <include file="$(find elevation_mapping_demos)/launch/visualization.launch" />  
  <!-- Launch RViz with the demo configuration -->  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find elevation_mapping_demos)/rviz/elevation_map_visualization.rviz" />

</launch>

  <!-- Publish tf 'base_footprint' as pose.-->
  <!-- <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="waffle_pose_publisher">
    <param name="from_frame" type="string" value="odom"/>
    <param name="to_frame" type="string" value="base_footprint"/>
  </node> -->

  <!-- Add Covariance to the Pose data -->
  <!-- <node pkg="elevation_mapping_demos" type="modify_pose_topic.py" name="modify_pose"/> -->
 
 <!-- Publish some points from the rosbag -->
  <!-- <remap from="/os1_cloud_node/points" to="/camera/depth/points_downsampled"/> -->

  <!-- <node pkg="rosbag" type="play" name="player" output="screen" args="-l /home/vresapow/catkin_ws_project/iDog.bag"> -->
  <!-- <param name ="/use_sim_time" value="true"/> -->
  <!-- </node> -->
  <!-- integration from the IMU values to get the angular position -->
  <!-- <node pkg="elevation_mapping_demos" type="angular_position_from_bag.py" name="modify_pose_imu"/> -->

